import {CommonRoutesConfig,configureRoutes,} from "../common/common.routes.config";
import {{^Scaffold^}Controllers } from "./controllers/{^scaffold^}.controllers";
import {{^Scaffold^}Middleware} from "./middleware/{^scaffold^}.middleware";
import express from "express";

export class {^Scaffold^}Routes
  extends CommonRoutesConfig
  implements configureRoutes
{
  constructor(app: express.Application) {
    super(app, "{^Scaffold+^}Route");
    this.configureRoutes();
  }

  configureRoutes() {
    const {^scaffold^}Controllers = new {^Scaffold^}Controllers();
    const {^scaffold^}Middleware = {^Scaffold^}Middleware.getInstance();

    this.app.get("/api/{^scaffold^}", [
        {^scaffold^}Controllers.list{^Scaffold+^}
    ]);
    this.app.post("/api/{^scaffold^}", [
        {^scaffold^}Controllers.create{^Scaffold^}
    ]);
    this.app.put(`/api/{^scaffold^}/:{^scaffold^}Id`, [
        {^scaffold^}Middleware.validate{^Scaffold^}Exists,
        {^scaffold^}Middleware.extract{^Scaffold^}Id,
        {^scaffold^}Controllers.put{^Scaffold^}
    ]);
    this.app.patch(`/api/{^scaffold^}/:{^scaffold^}Id`, [
        {^scaffold^}Middleware.validate{^Scaffold^}Exists,
        {^scaffold^}Middleware.extract{^Scaffold^}Id,
        {^scaffold^}Controllers.patch{^Scaffold^}
    ]);
    this.app.delete(`/api/{^scaffold^}/:{^scaffold^}Id`, [
      {^scaffold^}Middleware.validate{^Scaffold^}Exists,
      {^scaffold^}Controllers.remove{^Scaffold^},
    ]);
    this.app.get(`/api/{^scaffold^}/:{^scaffold^}Id`, [
      {^scaffold^}Middleware.validate{^Scaffold^}Exists,
      {^scaffold^}Controllers.get{^Scaffold^}ById,
    ]);
  }
}
